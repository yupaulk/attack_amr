geom_boxplot()
# Add ID as label to the plot
p1 <- p + geom_dotplot(binaxis='y', stackdir='center', dotsize = 0.4) +
scale_fill_manual(values=c("#CD3857", "#61A6E3", "#FEF250")) +
theme_classic() + theme(text = element_text(family = "Palatino"),
axis.title.y = element_text(size = 35),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 20),
axis.text.x = element_text(size = 16, angle = 30, hjust = 1, face = "bold"),
legend.position = "none",
plot.title = element_text(face = "bold"),
plot.margin = margin(0.25, 0.25, 0.25, 0.25, "cm"))
# Adjust the scale to be more detailed
p1 <- p1 + labs(title = "Diversity Metrics for Taxonomic Composition Across Hospitals",
subtitle = "Shannon Diversity Index by Hospital") +
scale_y_continuous(limits = c(2.5,max(tax_shannon_div$shannon)), breaks = seq(2.5,max(tax_shannon_div$shannon), by = 0.5))
# Add ID as labels
p1 <- p1 + geom_text(aes(label = paste(rownames(tax_shannon_div), tax_shannon_div$shannon)), hjust = -0.1, vjust = 0.5, size = 4)
p1  # Display the plot
# Save plot
ggsave(filename = "plot6_tax_shannon.tiff",
width = 16, height = 13, dpi = 300, units = "in", device='tiff', scale = 1)
tax_simpson_div <- data.frame("simpson" = diversity(otu_table(metaphlan_PHY_counts_genus), index = "simpson", MARGIN = 2))
all(rownames(tax_simpson_div) == colnames(metaphlan_PHY_counts_genus@otu_table))
diversity_observed <- apply(metaphlan_PHY_counts_genus@otu_table > 0, 2, sum)
tax_simpson_div$observed <- diversity_observed
tax_simpson_div$hospital <- as.factor(metaphlan_PHY_counts_genus@sam_data$hospital)
# Get mean and standard deviation
tax_simpson_eda <- do.call(data.frame, aggregate(simpson ~ hospital, tax_simpson_div, function(x) c(mean = mean(x), sd = sd(x))))
# Test the significance
kruskal.test(simpson ~ hospital, data = tax_simpson_div)
# There are no sig. differences
# Test multiple pairwise
tax_simpson_stat.test <- pairwise.wilcox.test(tax_simpson_div$simpson, tax_simpson_div$hospital,
p.adjust.method = "BH")
tax_simpson_stat.test
# Plot
p <- ggplot(tax_simpson_div, aes(x=hospital, y=simpson, fill = hospital)) +
geom_boxplot()
# Add ID as label to the plot
p1 <- p + geom_dotplot(binaxis='y', stackdir='center', dotsize = 0.4) +
scale_fill_manual(values=c("#CD3857", "#61A6E3", "#FEF250")) +
theme_classic() + theme(text = element_text(family = "Palatino"),
axis.title.y = element_text(size = 35),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 20),
axis.text.x = element_text(size = 16, angle = 30, hjust = 1, face = "bold"),
legend.position = "none",
plot.title = element_text(face = "bold"),
plot.margin = margin(0.25, 0.25, 0.25, 0.25, "cm"))
# Adjust the scale to be more detailed
p1 <- p1 + labs(title = "Diversity Metrics for Taxonomic Composition Across Hospitals",
subtitle = "Simpson Diversity Index by Hospital") +
scale_y_continuous(limits = c(0.9,max(tax_simpson_div$simpson)), breaks = seq(0.9,max(tax_simpson_div$simpson), by = 0.02))
# Add ID as labels
p1 <- p1 + geom_text(aes(label = paste(rownames(tax_simpson_div), tax_simpson_div$simpson)), hjust = -0.1, vjust = 0.5, size = 4)
p1  # Display the plot
# Save plot
ggsave(filename = "plot6_tax_simpson.tiff",
width = 16, height = 13, dpi = 300, units = "in", device='tiff', scale = 1)
tax_invsimp_div <- data.frame("invsimpson" = diversity(otu_table(metaphlan_PHY_counts_genus), index = "inv", MARGIN = 2))
all(rownames(tax_invsimp_div) == colnames(metaphlan_PHY_counts_genus@otu_table))
diversity_observed <- apply(metaphlan_PHY_counts_genus@otu_table > 0, 2, sum)
tax_invsimp_div$observed <- diversity_observed
tax_invsimp_div$hospital <- as.factor(metaphlan_PHY_counts_genus@sam_data$hospital)
# Get mean and standard deviation
tax_invsimp_eda <- do.call(data.frame, aggregate(invsimpson ~ hospital, tax_invsimp_div, function(x) c(mean = mean(x), sd = sd(x))))
# Test the significance
kruskal.test(invsimpson ~ hospital, data = tax_invsimp_div)
# There are no sig. differences
# Test multiple pairwise
tax_invsimp_stat.test <- pairwise.wilcox.test(tax_invsimp_div$invsimpson, tax_invsimp_div$hospital,
p.adjust.method = "BH")
tax_invsimp_stat.test
# Plot
p <- ggplot(tax_invsimp_div, aes(x=hospital, y=invsimpson, fill = hospital)) +
geom_boxplot()
# Add ID as label to the plot
p1 <- p + geom_dotplot(binaxis='y', stackdir='center', dotsize = 0.4) +
scale_fill_manual(values=c("#CD3857", "#61A6E3", "#FEF250")) +
theme_classic() + theme(text = element_text(family = "Palatino"),
axis.title.y = element_text(size = 35),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 20),
axis.text.x = element_text(size = 16, angle = 30, hjust = 1, face = "bold"),
legend.position = "none",
plot.title = element_text(face = "bold"),
plot.margin = margin(0.25, 0.25, 0.25, 0.25, "cm"))
# Adjust the scale to be more detailed
p1 <- p1 + labs(title = "Diversity Metrics for Taxonomic Composition Across Hospitals",
subtitle = "Inv Simpson Diversity Index by Hospital") +
scale_y_continuous(limits = c(10,max(tax_invsimp_div$invsimpson)), breaks = seq(10,max(tax_invsimp_div$invsimpson), by = 5))
# Add ID as labels
p1 <- p1 + geom_text(aes(label = paste(rownames(tax_invsimp_div), tax_invsimp_div$invsimpson)), hjust = -0.1, vjust = 0.5, size = 4)
p1  # Display the plot
# Save plot
ggsave(filename = "plot6_tax_invsimpson.tiff",
width = 16, height = 13, dpi = 300, units = "in", device='tiff', scale = 1)
tax_rich <- data.frame("richness" = specnumber(otu_table(metaphlan_PHY_counts_genus), MARGIN=2))
all(rownames(tax_rich) == colnames(metaphlan_PHY_counts_genus@otu_table))
tax_rich$hospital <- as.factor(metaphlan_PHY_counts_genus@sam_data$hospital)
# Get mean and standard deviation
tax_rich_eda <- do.call(data.frame, aggregate(richness ~ hospital, tax_rich, function(x) c(mean = mean(x), sd = sd(x))))
# Test the significance
kruskal.test(richness ~ hospital, data = tax_rich)
# There are no sig. differences
# Test multiple pairwise
tax_rich_stat.test <- pairwise.wilcox.test(tax_rich$richness, tax_rich$hospital,
p.adjust.method = "BH")
tax_rich_stat.test
# Plot
p <- ggplot(tax_rich, aes(x=hospital, y=richness, fill = hospital)) +
geom_boxplot()
# Add ID as label to the plot
p1 <- p + geom_dotplot(binaxis='y', stackdir='center', dotsize = 0.4) +
scale_fill_manual(values=c("#CD3857", "#61A6E3", "#FEF250")) +
theme_classic() + theme(text = element_text(family = "Palatino"),
axis.title.y = element_text(size = 35),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 20),
axis.text.x = element_text(size = 16, angle = 30, hjust = 1, face = "bold"),
legend.position = "none",
plot.title = element_text(face = "bold"),
plot.margin = margin(0.25, 0.25, 0.25, 0.25, "cm"))
# Adjust the scale to be more detailed
p1 <- p1 + labs(title = "Richness for Taxonomic Composition Across Hospitals",
subtitle = "Richness by Hospital") +
scale_y_continuous(limits = c(200,max(tax_rich$richness)), breaks = seq(200,max(tax_rich$richness), by = 50))
# Add ID as labels
p1 <- p1 + geom_text(aes(label = paste(rownames(tax_rich), tax_rich$richness)), hjust = -0.1, vjust = 0.5, size = 4)
p1  # Display the plot
# Save plot
ggsave(filename = "plot6_tax_richness.tiff",
width = 16, height = 13, dpi = 300, units = "in", device='tiff', scale = 1)
tax_even <- data.frame("evenness" = tax_shannon_div$shannon / log(tax_rich$richness))
rownames(tax_even) <- colnames(metaphlan_PHY_counts_genus@otu_table)
all(rownames(tax_even) == colnames(metaphlan_PHY_counts_genus@otu_table))
tax_even$hospital <- as.factor(metaphlan_PHY_counts_genus@sam_data$hospital)
# Get mean and standard deviation
tax_even_eda <- do.call(data.frame, aggregate(evenness ~ hospital, tax_even, function(x) c(mean = mean(x), sd = sd(x))))
# Test the significance
kruskal.test(evenness ~ hospital, data = tax_even)
# There are no sig. differences
# Test multiple pairwise
tax_even_stat.test <- pairwise.wilcox.test(tax_even$evenness, tax_even$hospital,
p.adjust.method = "BH")
tax_even_stat.test
# Plot
p <- ggplot(tax_even, aes(x=hospital, y=evenness, fill = hospital)) +
geom_boxplot()
# Add ID as label to the plot
p1 <- p + geom_dotplot(binaxis='y', stackdir='center', dotsize = 0.4) +
scale_fill_manual(values=c("#CD3857", "#61A6E3", "#FEF250")) +
theme_classic() + theme(text = element_text(family = "Palatino"),
axis.title.y = element_text(size = 35),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 20),
axis.text.x = element_text(size = 16, angle = 30, hjust = 1, face = "bold"),
legend.position = "none",
plot.title = element_text(face = "bold"),
plot.margin = margin(0.25, 0.25, 0.25, 0.25, "cm"))
# Adjust the scale to be more detailed
p1 <- p1 + labs(title = "Evenness for Taxonomic Composition Across Hospitals",
subtitle = "Pielou's Evenness by Hospital") +
scale_y_continuous(limits = c(0.5,max(tax_even$evenness)), breaks = seq(0.5,max(tax_even$evenness), by = 0.05))
# Add ID as labels
p1 <- p1 + geom_text(aes(label = paste(rownames(tax_even), tax_even$evenness)), hjust = -0.1, vjust = 0.5, size = 4)
p1  # Display the plot
# Save plot
ggsave(filename = "plot6_tax_evenness.tiff",
width = 16, height = 13, dpi = 300, units = "in", device='tiff', scale = 1)
mge_shannon_div <- data.frame("shannon" = diversity(otu_table(MGE_PHY_counts_HWW), index = "shannon", MARGIN = 2))
all(rownames(mge_shannon_div) == colnames(MGE_PHY_counts_HWW@otu_table))
diversity_observed <- apply(MGE_PHY_counts_HWW@otu_table > 0, 2, sum)
mge_shannon_div$observed <- diversity_observed
mge_shannon_div$hospital <- as.factor(MGE_PHY_counts_HWW@sam_data$hospital)
# Get mean and standard deviation
mge_shannon_eda <- do.call(data.frame, aggregate(shannon ~ hospital, mge_shannon_div, function(x) c(mean = mean(x), sd = sd(x))))
# Plot
p <- ggplot(mge_shannon_div, aes(x=hospital, y=shannon, fill = hospital)) +
geom_boxplot()
# Test the significance
kruskal.test(shannon ~ hospital, data = mge_shannon_div)
# There are no sig. differences
# Test multiple pairwise
mge_shannon_stat.test <- pairwise.wilcox.test(mge_shannon_div$shannon, mge_shannon_div$hospital,
p.adjust.method = "BH")
mge_shannon_stat.test
# Add ID as label to the plot
p1 <- p + geom_dotplot(binaxis='y', stackdir='center', dotsize = 0.4) +
scale_fill_manual(values=c("#CD3857", "#61A6E3", "#FEF250")) +
theme_classic() + theme(text = element_text(family = "Palatino"),
axis.title.y = element_text(size = 35),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 20),
axis.text.x = element_text(size = 16, angle = 30, hjust = 1, face = "bold"),
legend.position = "none",
plot.title = element_text(face = "bold"),
plot.margin = margin(0.25, 0.25, 0.25, 0.25, "cm"))
# Adjust the scale to be more detailed
p1 <- p1 + labs(title = "Diversity Metrics for MGEs Across Hospitals",
subtitle = "Shannon Diversity Index by Hospital") +
scale_y_continuous(limits = c(3.5,max(mge_shannon_div$shannon)), breaks = seq(3.5,max(mge_shannon_div$shannon), by = 0.5))
# Add ID as labels
p1 <- p1 + geom_text(aes(label = paste(rownames(mge_shannon_div), mge_shannon_div$shannon)), hjust = -0.1, vjust = 0.5, size = 4)
p1  # Display the plot
# Save plot
ggsave(filename = "plot7_mge_shannon.tiff",
width = 16, height = 13, dpi = 300, units = "in", device='tiff', scale = 1)
mge_simpson_div <- data.frame("simpson" = diversity(otu_table(MGE_PHY_counts_HWW), index = "simpson", MARGIN = 2))
all(rownames(mge_simpson_div) == colnames(MGE_PHY_counts_HWW@otu_table))
diversity_observed <- apply(MGE_PHY_counts_HWW@otu_table > 0, 2, sum)
mge_simpson_div$observed <- diversity_observed
mge_simpson_div$hospital <- as.factor(MGE_PHY_counts_HWW@sam_data$hospital)
# Get mean and standard deviation
mge_simpson_eda <- do.call(data.frame, aggregate(simpson ~ hospital, mge_simpson_div, function(x) c(mean = mean(x), sd = sd(x))))
# Test the significance
kruskal.test(simpson ~ hospital, data = mge_simpson_div)
# There are no sig. differences
# Test multiple pairwise
mge_simpson_stat.test <- pairwise.wilcox.test(mge_simpson_div$simpson, mge_simpson_div$hospital,
p.adjust.method = "BH")
mge_simpson_stat.test
# Plot
p <- ggplot(mge_simpson_div, aes(x=hospital, y=simpson, fill = hospital)) +
geom_boxplot()
# Add ID as label to the plot
p1 <- p + geom_dotplot(binaxis='y', stackdir='center', dotsize = 0.4) +
scale_fill_manual(values=c("#CD3857", "#61A6E3", "#FEF250")) +
theme_classic() + theme(text = element_text(family = "Palatino"),
axis.title.y = element_text(size = 35),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 20),
axis.text.x = element_text(size = 16, angle = 30, hjust = 1, face = "bold"),
legend.position = "none",
plot.title = element_text(face = "bold"),
plot.margin = margin(0.25, 0.25, 0.25, 0.25, "cm"))
# Adjust the scale to be more detailed
p1 <- p1 + labs(title = "Diversity Metrics for MGEs Across Hospitals",
subtitle = "Simpson Diversity Index by Hospital") +
scale_y_continuous(limits = c(0.92,max(mge_simpson_div$simpson)), breaks = seq(0.92,max(mge_simpson_div$simpson), by = 0.02))
# Add ID as labels
p1 <- p1 + geom_text(aes(label = paste(rownames(mge_simpson_div), mge_simpson_div$simpson)), hjust = -0.1, vjust = 0.5, size = 4)
p1  # Display the plot
# Save plot
ggsave(filename = "plot7_mge_simpson.tiff",
width = 16, height = 13, dpi = 300, units = "in", device='tiff', scale = 1)
mge_invsimp_div <- data.frame("invsimpson" = diversity(otu_table(MGE_PHY_counts_HWW), index = "inv", MARGIN = 2))
all(rownames(mge_invsimp_div) == colnames(MGE_PHY_counts_HWW@otu_table))
diversity_observed <- apply(MGE_PHY_counts_HWW@otu_table > 0, 2, sum)
mge_invsimp_div$observed <- diversity_observed
mge_invsimp_div$hospital <- as.factor(MGE_PHY_counts_HWW@sam_data$hospital)
# Get mean and standard deviation
mge_invsimp_eda <- do.call(data.frame, aggregate(invsimpson ~ hospital, mge_invsimp_div, function(x) c(mean = mean(x), sd = sd(x))))
# Test the significance
kruskal.test(invsimpson ~ hospital, data = mge_invsimp_div)
# There are no sig. differences
# Test multiple pairwise
mge_invsimp_stat.test <- pairwise.wilcox.test(mge_invsimp_div$invsimpson, mge_invsimp_div$hospital,
p.adjust.method = "BH")
mge_invsimp_stat.test
# Plot
p <- ggplot(mge_invsimp_div, aes(x=hospital, y=invsimpson, fill = hospital)) +
geom_boxplot()
# Add ID as label to the plot
p1 <- p + geom_dotplot(binaxis='y', stackdir='center', dotsize = 0.4) +
scale_fill_manual(values=c("#CD3857", "#61A6E3", "#FEF250")) +
theme_classic() + theme(text = element_text(family = "Palatino"),
axis.title.y = element_text(size = 35),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 20),
axis.text.x = element_text(size = 16, angle = 30, hjust = 1, face = "bold"),
legend.position = "none",
plot.title = element_text(face = "bold"),
plot.margin = margin(0.25, 0.25, 0.25, 0.25, "cm"))
# Adjust the scale to be more detailed
p1 <- p1 + labs(title = "Diversity Metrics for MGEs Across Hospitals",
subtitle = "Inv Simpson Diversity Index by Hospital") +
scale_y_continuous(limits = c(15,max(mge_invsimp_div$invsimpson)), breaks = seq(15,max(mge_invsimp_div$invsimpson), by = 10))
# Add ID as labels
p1 <- p1 + geom_text(aes(label = paste(rownames(mge_invsimp_div), mge_invsimp_div$invsimpson)), hjust = -0.1, vjust = 0.5, size = 4)
p1  # Display the plot
# Save plot
ggsave(filename = "plot7_mge_invsimpson.tiff",
width = 16, height = 13, dpi = 300, units = "in", device='tiff', scale = 1)
mge_rich <- data.frame("richness" = specnumber(otu_table(MGE_PHY_counts_HWW), MARGIN=2))
all(rownames(mge_rich) == colnames(MGE_PHY_counts_HWW@otu_table))
mge_rich$hospital <- as.factor(MGE_PHY_counts_HWW@sam_data$hospital)
# Get mean and standard deviation
mge_rich_eda <- do.call(data.frame, aggregate(richness ~ hospital, mge_rich, function(x) c(mean = mean(x), sd = sd(x))))
# Test the significance
kruskal.test(richness ~ hospital, data = mge_rich)
# There are no sig. differences
# Test multiple pairwise
mge_rich_stat.test <- pairwise.wilcox.test(mge_rich$richness, mge_rich$hospital,
p.adjust.method = "BH")
mge_rich_stat.test
pvalues <- data.frame(group1 = c("SLMC","UST","CGH"), group2 = c("CGH","SLMC","UST"), p.adj = c("**","*","n.s."))
# Plot
p <- ggboxplot(mge_rich, x = "hospital", y = "richness", fill = "hospital", palette = c("#CD3857", "#61A6E3", "#FEF250")) +
stat_pvalue_manual(pvalues, size = 6, y.position = 900, step.increase = 0.05, label = "p.adj")
# Add ID as label to the plot
p1 <- p + geom_dotplot(binaxis='y', stackdir='center', dotsize = 0.4, aes(fill = hospital)) +
scale_fill_manual(values=c("#CD3857", "#61A6E3", "#FEF250")) +
theme_classic() + theme(text = element_text(family = "Palatino"),
axis.title.y = element_text(size = 35),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 20),
axis.text.x = element_text(size = 16, angle = 30, hjust = 1, face = "bold"),
legend.position = "none",
plot.title = element_text(face = "bold"),
plot.margin = margin(0.25, 0.25, 0.25, 0.25, "cm"))
# Adjust the scale to be more detailed
p1 <- p1 + labs(title = "Richness for MGEs Across Hospitals",
subtitle = "Richness by Hospital") +
scale_y_continuous(limits = c(400,950), breaks = seq(400,950, by = 50))
# Add ID as labels
p1 <- p1 + geom_text(aes(label = paste(rownames(mge_rich), mge_rich$richness)), hjust = -0.1, vjust = 0.5, size = 4)
p1  # Display the plot
# Save plot
ggsave(filename = "plot7_mge_richness.tiff",
width = 16, height = 13, dpi = 300, units = "in", device='tiff', scale = 1)
mge_even <- data.frame("evenness" = mge_shannon_div$shannon / log(mge_rich$richness))
rownames(mge_even) <- colnames(MGE_PHY_counts_HWW@otu_table)
all(rownames(mge_even) == colnames(MGE_PHY_counts_HWW@otu_table))
mge_even$hospital <- as.factor(MGE_PHY_counts_HWW@sam_data$hospital)
# Get mean and standard deviation
mge_even_eda <- do.call(data.frame, aggregate(evenness ~ hospital, mge_even, function(x) c(mean = mean(x), sd = sd(x))))
# Test the significance
kruskal.test(evenness ~ hospital, data = mge_even)
# There are no sig. differences
# Test multiple pairwise
mge_even_stat.test <- pairwise.wilcox.test(mge_even$evenness, mge_even$hospital,
p.adjust.method = "BH")
mge_even_stat.test
# Plot
p <- ggplot(mge_even, aes(x=hospital, y=evenness, fill = hospital)) +
geom_boxplot()
# Add ID as label to the plot
p1 <- p + geom_dotplot(binaxis='y', stackdir='center', dotsize = 0.4) +
scale_fill_manual(values=c("#CD3857", "#61A6E3", "#FEF250")) +
theme_classic() + theme(text = element_text(family = "Palatino"),
axis.title.y = element_text(size = 35),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 20),
axis.text.x = element_text(size = 16, angle = 30, hjust = 1, face = "bold"),
legend.position = "none",
plot.title = element_text(face = "bold"),
plot.margin = margin(0.25, 0.25, 0.25, 0.25, "cm"))
# Adjust the scale to be more detailed
p1 <- p1 + labs(title = "Evenness for MGEs Across Hospitals",
subtitle = "Pielou's Evenness by Hospital") +
scale_y_continuous(limits = c(0.65,max(mge_even$evenness)), breaks = seq(0.65,max(mge_even$evenness), by = 0.05))
# Add ID as labels
p1 <- p1 + geom_text(aes(label = paste(rownames(mge_even), mge_even$evenness)), hjust = -0.1, vjust = 0.5, size = 4)
p1  # Display the plot
# Save plot
ggsave(filename = "plot7_mge_evenness.tiff",
width = 16, height = 13, dpi = 300, units = "in", device='tiff', scale = 1)
# Gather data
df<-data.frame(RA=sample_sums(resfinder_PHY_rel_HWW),
hospital=as.factor(sample_data(resfinder_PHY_rel_HWW)$hospital))
M <-lm(RA~hospital, data=df)
summary(M)
shapiro.test(df$RA)
# Data is not normally distributed.
plot(M)
# Heterosedasticity?
par(mfrow=c(2,2))
#plot(M)
lmtest::bptest(M)  # Breusch-Pagan test
car::ncvTest(M)  # Breusch-Pagan test
# There is no heteroscedasticity.
# Test
kruskal.test(RA ~ hospital, data = df)
# Test multiple pairwise
stat.test <- pairwise.wilcox.test(df$RA, df$hospital,
p.adjust.method = "BH")
stat.test
pvalues <- tibble::tribble(
~group1, ~group2,   ~p.adj,
"SLMC",     "CGH", "***",
"SLMC",     "UST", "**",
"CGH",     "UST", "**"
)
pvalues
# +
#   stat_pvalue_manual(pvalues, hide.ns = TRUE, size = 8, y.position = 2.5, step.increase = 0.025, label = "p.adj")
# Save plot
p <- ggboxplot(df, x = "hospital", y = "RA", color = "hospital", palette = c("#1C4731", "#910C28", "#1E88E5"), width = 0.3)  +
theme_bw() +
theme(axis.text.x = element_text(size = 16, face = "bold"),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 16),
axis.title.y = element_text(size = 20),
legend.position = "none",
plot.subtitle = element_text(size = 24, hjust = 0.5),
plot.tag = element_text(size = 24, family = "Palatino", face = "bold"),
text = element_text(family = "Palatino"),
aspect.ratio = 1) +
labs(y = "ARGs/16S rRNA", x = "") +
guides(color = "none", alpha = "none") +
geom_jitter(data = df, aes(x = hospital, y = RA, color = hospital), size = 3, alpha = 0.7, width = 0.1) +
geom_text(data = df, aes(x = hospital, y = RA, label = rownames(arg_shannon_div)), size = 3, vjust = -0.5)  +
labs(title = "Comparison of ARGs/16S rRNA Levels Across Hospitals using Wilcoxx")  # Add title
ggsave(filename = "wilcox.tiff",
width = 16, height = 13, dpi = 300, units = "in", device='tiff', scale = 1)
cols <- get_palette(c("#332288", "#117733", "#52BFAD", "#88CCEE", "#DDCC77", "#FDA4B3",
"#F22D3D", "#882255", "#5F5E98", "#E4C960", "#FD8FD9"), 41)
metaphlan_PHY_rel_genus <- subset_taxa(metaphlan_PHY_rel_genus, Genus != "Coprobacillaceae Family")
metaphlan_PHY_rel_genus <- subset_taxa(metaphlan_PHY_rel_genus, Genus != "Catenibacterium")
metaphlan_PHY_rel_genus <- subset_taxa(metaphlan_PHY_rel_genus, Genus != "NA")
metaphlan_PHY_rel_genus%>%
tax_fix(
min_length = 4,
unknowns = c("NA"),
sep = " ", anon_unique = TRUE,
suffix_rank = "classified"
)
# p <- metaphlan_PHY_rel_genus %>%
#   comp_barplot("Genus", facet_by = "hospital", n_taxa = 40) +
#   coord_flip()
p <- metaphlan_PHY_rel_genus %>%
comp_barplot(tax_level = "Genus", n_taxa = 40,
tax_transform_for_plot = "identity", facet_by  = "hospital", )+
coord_flip()  +
labs(x = NULL, y = NULL) + theme_light() + ggtitle("Top 40 taxa (metaphlan)") +
theme(text = element_text(family = "Palatino"),
plot.title = element_text(size = 30, face = "bold"),
axis.text.y = element_text(size = 10),
axis.text.x = element_text(size = 20),
strip.text.y = element_text(size = 20, color = "black", face = "bold", angle = 0, hjust = 0),
strip.background = element_rect(fill = "white", color = "white"),
panel.spacing.y = unit(1, "lines"),
legend.text = element_text(size = 18, face = "italic"),
legend.title = element_blank(),
legend.position = "bottom", legend.direction = "horizontal",
legend.spacing = unit(0.25, 'cm'),
legend.key.size = unit(0.85, "cm")) + guides(fill = guide_legend(byrow = TRUE))
print (p)
# Save plot
ggsave(filename = "plot12old.tiff",
width = 16, height = 13, dpi = 300, units = "in", device='tiff', scale = 1)
# metaphlan_PHY_rel_fam <- subset_taxa(metaphlan_PHY_rel_fam, Family != "Coprobacillaceae")
metaphlan_PHY_rel_genus <- subset_taxa(metaphlan_PHY_rel_genus, Genus != "Catenibacterium")
metaphlan_PHY_rel_genus <- subset_taxa(metaphlan_PHY_rel_genus, Genus != "NA")
metaphlan_PHY_rel_genus%>%
tax_fix(
min_length = 4,
unknowns = c("NA"),
sep = " ", anon_unique = TRUE,
suffix_rank = "classified"
)
p <- metaphlan_PHY_rel_genus %>%
comp_barplot("Genus", facet_by = "hospital", n_taxa = 40) +
coord_flip()
# p <- metaphlan_PHY_rel_fam %>%
#   comp_barplot(tax_level = "Family", n_taxa = 40,
#               tax_transform_for_plot = "identity", facet_by  = "hospital", )+
#   coord_flip()  +
#   labs(x = NULL, y = NULL) + theme_light() + ggtitle("Top 40 taxa (metaphlan)") +
#   theme(text = element_text(family = "Palatino"),
#         plot.title = element_text(size = 30, face = "bold"),
#         axis.text.y = element_text(size = 10),
#         axis.text.x = element_text(size = 20),
#         strip.text.y = element_text(size = 20, color = "black", face = "bold", angle = 0, hjust = 0),
#         strip.background = element_rect(fill = "white", color = "white"),
#         panel.spacing.y = unit(1, "lines"),
#         legend.text = element_text(size = 18, face = "italic"),
#         legend.title = element_blank(),
#         legend.position = "bottom", legend.direction = "horizontal",
#         legend.spacing = unit(0.25, 'cm'),
#         legend.key.size = unit(0.85, "cm")) + guides(fill = guide_legend(byrow = TRUE))
print (p)
# Save plot
ggsave(filename = "plot12oldfam.tiff",
width = 16, height = 13, dpi = 300, units = "in", device='tiff', scale = 1)
p<-plot_bar(resfinder_PHY_rel_HWW, fill = "Class", x = "hospital")
ggsave(filename = "bar_Resfinder.tiff",
width = 16, height = 13, dpi = 300, units = "in", device='tiff', scale = 1)
otu_table_data <- otu_table(resfinder_PHY_rel_HWW)
print(head(otu_table_data))
View(tax_even_eda)
# Gather data
df<-data.frame(RA=sample_sums(resfinder_PHY_rel_HWW),
hospital=as.factor(sample_data(resfinder_PHY_rel_HWW)$hospital))
View(df)
View(resfinder_PHY_rel)
View(df)
# Gather data
sample_sums(resfinder_PHY_rel_HWW)
# Gather data
tax_table(resfinder_PHY_rel_HWW)
# Gather data
sum(tax_table(resfinder_PHY_rel_HWW))
View(df)
# Gather data
View(otu_table(resfinder_PHY_rel_HWW))
colSums(otu_table(resfinder_PHY_rel_HWW))
# Gather data
View(otu_table(resfinder_PHY_rel_HWW))
df<-data.frame(RA=sample_sums(resfinder_PHY_rel_HWW),
hospital=as.factor(sample_data(resfinder_PHY_rel_HWW)$hospital))
M <-lm(RA~hospital, data=df)
summary(M)
View(df)
shapiro.test(df$RA)
# Data is not normally distributed.
plot(M)
# Heterosedasticity?
par(mfrow=c(2,2))
source("~/.active-rstudio-document", echo=TRUE)
