bar_outline_colour = NA,
facet_by  = "hospital",
bar_width = 0.7,
other_name = "Others") +
coord_flip()  +
labs(x = NULL, y = NULL) +
ggtitle("Relative Abundances of Top 40 Orders (metaphlan)") +
abd_th +
guides(fill = guide_legend(byrow = TRUE))
# Save plot
ggsave(filename = "plot12_tax_rel_order.tiff",
width = 16, height = 8, dpi = 300, units = "in", device='tiff', scale = 1)
metaphlan_PHY_rel_class <- subset_taxa(metaphlan_PHY_rel_class, Class != "Clostridia")
metaphlan_PHY_rel_class <- subset_taxa(metaphlan_PHY_rel_class, Class != "Erysipelotrichia")
metaphlan_PHY_rel_class <- subset_taxa(metaphlan_PHY_rel_class, Class != "NA")
metaphlan_PHY_rel_class %>%
tax_fix(
min_length = 4,
unknowns = c("NA"),
sep = " ", anon_unique = TRUE,
suffix_rank = "classified"
)
p <- metaphlan_PHY_rel_class %>%
comp_barplot(tax_level = "Class",
n_taxa = 40,
sample_order = sort(rownames(sam_data(metaphlan_PHY_rel_class)), decreasing=T),
bar_outline_colour = NA,
facet_by  = "hospital",
bar_width = 0.7,
other_name = "Others") +
coord_flip()  +
labs(x = NULL, y = NULL) +
ggtitle("Relative Abundances of Top 40 Classes (metaphlan)") +
abd_th +
guides(fill = guide_legend(byrow = TRUE))
# Save plot
ggsave(filename = "plot12_tax_rel_class.tiff",
width = 16, height = 8, dpi = 300, units = "in", device='tiff', scale = 1)
metaphlan_PHY_rel_phylum <- subset_taxa(metaphlan_PHY_rel_phylum, Phylum != "NA")
metaphlan_PHY_rel_phylum %>%
tax_fix(
min_length = 4,
unknowns = c("NA"),
sep = " ", anon_unique = TRUE,
suffix_rank = "classified"
)
p <- metaphlan_PHY_rel_phylum %>%
comp_barplot(tax_level = "Phylum",
n_taxa = 40,
sample_order = sort(rownames(sam_data(metaphlan_PHY_rel_phylum)), decreasing=T),
bar_outline_colour = NA,
facet_by  = "hospital",
bar_width = 0.7,
other_name = "Others") +
coord_flip()  +
labs(x = NULL, y = NULL) +
ggtitle("Relative Abundances of Phyla (metaphlan)") +
abd_th +
guides(fill = guide_legend(byrow = TRUE))
# Save plot
ggsave(filename = "plot12_tax_rel_phylum.tiff",
width = 16, height = 8, dpi = 300, units = "in", device='tiff', scale = 1)
metaphlan_PHY_rel_species <- subset_taxa(metaphlan_PHY_rel_species, Species != "NA")
p <- metaphlan_PHY_rel_species %>%
comp_barplot(tax_level = "Species",
n_taxa = 40,
tax_transform_for_plot = "identity",
sample_order = sort(rownames(sam_data(metaphlan_PHY_rel_species))),
bar_outline_colour = NA,
bar_width = 0.7,
other_name = "Others") +
labs(x = NULL, y = NULL) +
ggtitle("Total Abundances of Top 40 Species (metaphlan)") +
abd_th + theme_update(legend.position = "right") +
guides(fill = guide_legend(byrow = TRUE))
# Save plot
ggsave(filename = "plot13_tax_count_species.tiff",
width = 24, height = 8, dpi = 300, units = "in", device='tiff', scale = 1)
metaphlan_PHY_rel_genus <- subset_taxa(metaphlan_PHY_rel_genus, Genus != "Coprobacillaceae Family")
metaphlan_PHY_rel_genus <- subset_taxa(metaphlan_PHY_rel_genus, Genus != "Catenibacterium")
metaphlan_PHY_rel_genus <- subset_taxa(metaphlan_PHY_rel_genus, Genus != "NA")
p <- metaphlan_PHY_rel_genus %>%
comp_barplot(tax_level = "Genus",
n_taxa = 40,
tax_transform_for_plot = "identity",
sample_order = sort(rownames(sam_data(metaphlan_PHY_rel_genus))),
bar_outline_colour = NA,
bar_width = 0.7,
other_name = "Others") +
labs(x = NULL, y = NULL) +
ggtitle("Total Abundances of Top 40 Genera (metaphlan)") +
abd_th + theme_update(legend.position = "right") +
guides(fill = guide_legend(byrow = TRUE))
# Save plot
ggsave(filename = "plot13_tax_count_genus.tiff",
width = 24, height = 8, dpi = 300, units = "in", device='tiff', scale = 1)
metaphlan_PHY_rel_family <- subset_taxa(metaphlan_PHY_rel_family, Family != "Coprobacillaceae")
metaphlan_PHY_rel_family <- subset_taxa(metaphlan_PHY_rel_family, Family != "NA")
p <- metaphlan_PHY_rel_family %>%
comp_barplot(tax_level = "Family",
n_taxa = 40,
tax_transform_for_plot = "identity",
sample_order = sort(rownames(sam_data(metaphlan_PHY_rel_family))),
bar_outline_colour = NA,
bar_width = 0.7,
other_name = "Others") +
labs(x = NULL, y = NULL) +
ggtitle("Total Abundances of Top 40 Families (metaphlan)") +
abd_th + theme_update(legend.position = "right") +
guides(fill = guide_legend(byrow = TRUE))
# Save plot
ggsave(filename = "plot13_tax_count_family.tiff",
width = 24, height = 8, dpi = 300, units = "in", device='tiff', scale = 1)
metaphlan_PHY_rel_order <- subset_taxa(metaphlan_PHY_rel_order, Order != "Eubacteriales")
metaphlan_PHY_rel_order <- subset_taxa(metaphlan_PHY_rel_order, Order != "Erysipelotrichales")
metaphlan_PHY_rel_order <- subset_taxa(metaphlan_PHY_rel_order, Order != "NA")
p <- metaphlan_PHY_rel_order %>%
comp_barplot(tax_level = "Order",
n_taxa = 40,
tax_transform_for_plot = "identity",
sample_order = sort(rownames(sam_data(metaphlan_PHY_rel_order))),
bar_outline_colour = NA,
bar_width = 0.7,
other_name = "Others") +
labs(x = NULL, y = NULL) +
ggtitle("Total Abundances of Top 40 Orders (metaphlan)") +
abd_th + theme_update(legend.position = "right") +
guides(fill = guide_legend(byrow = TRUE))
# Save plot
ggsave(filename = "plot13_tax_count_order.tiff",
width = 24, height = 8, dpi = 300, units = "in", device='tiff', scale = 1)
metaphlan_PHY_rel_class <- subset_taxa(metaphlan_PHY_rel_class, Class != "Clostridia")
metaphlan_PHY_rel_class <- subset_taxa(metaphlan_PHY_rel_class, Class != "Erysipelotrichia")
metaphlan_PHY_rel_class <- subset_taxa(metaphlan_PHY_rel_class, Class != "NA")
p <- metaphlan_PHY_rel_class %>%
comp_barplot(tax_level = "Class",
n_taxa = 40,
tax_transform_for_plot = "identity",
sample_order = sort(rownames(sam_data(metaphlan_PHY_rel_class))),
bar_outline_colour = NA,
bar_width = 0.7,
other_name = "Others") +
labs(x = NULL, y = NULL) +
ggtitle("Total Abundances of Top 40 Classes (metaphlan)") +
abd_th + theme_update(legend.position = "right") +
guides(fill = guide_legend(byrow = TRUE))
# Save plot
ggsave(filename = "plot13_tax_count_class.tiff",
width = 24, height = 8, dpi = 300, units = "in", device='tiff', scale = 1)
metaphlan_PHY_rel_phylum <- subset_taxa(metaphlan_PHY_rel_phylum, Phylum != "NA")
p <- metaphlan_PHY_rel_phylum %>%
comp_barplot(tax_level = "Phylum",
n_taxa = 40,
tax_transform_for_plot = "identity",
sample_order = sort(rownames(sam_data(metaphlan_PHY_rel_phylum))),
bar_outline_colour = NA,
bar_width = 0.7,
other_name = "Others") +
labs(x = NULL, y = NULL) +
ggtitle("Total Abundances of Phyla (metaphlan)") +
abd_th + theme_update(legend.position = "right") +
guides(fill = guide_legend(byrow = TRUE))
# Save plot
ggsave(filename = "plot13_tax_count_phylum.tiff",
width = 24, height = 8, dpi = 300, units = "in", device='tiff', scale = 1)
p<-plot_bar(resfinder_PHY_rel_HWW, fill = "Class", x = "hospital")
ggsave(filename = "bar_Resfinder.tiff",
width = 16, height = 13, dpi = 300, units = "in", device='tiff', scale = 1)
otu_table_data <- otu_table(resfinder_PHY_rel_HWW)
print(head(otu_table_data))
library(phyloseq)
library(dplyr)
library(tidyverse)
library(networkD3)
library(hiervis)
source("plot_hierarchy.R")
p <- plot_hierarchy(physeq = metaphlan_PHY_rel_species, number_of_taxa_to_plot = 40)
p
htmlwidgets::saveWidget(p, file = "plot3_sankey_species.html")
p <- plot_hierarchy(physeq = metaphlan_PHY_rel_genus, number_of_taxa_to_plot = 40)
p
htmlwidgets::saveWidget(p, file = "plot3_sankey_genus.html")
p <- plot_hierarchy(physeq = metaphlan_PHY_rel_family, number_of_taxa_to_plot = 40)
p
htmlwidgets::saveWidget(p, file = "plot3_sankey_family.html")
p <- plot_hierarchy(physeq = metaphlan_PHY_rel_order, number_of_taxa_to_plot = 40)
p
htmlwidgets::saveWidget(p, file = "plot3_sankey_order.html")
p <- plot_hierarchy(physeq = metaphlan_PHY_rel_class, number_of_taxa_to_plot = 40)
p
htmlwidgets::saveWidget(p, file = "plot3_sankey_class.html")
p <- plot_hierarchy(physeq = metaphlan_PHY_rel_phylum, number_of_taxa_to_plot = 40)
p
htmlwidgets::saveWidget(p, file = "plot3_sankey_phylum.html")
#' @import rlang
#' @import purrr
#' @import tidyr
#' @import plyr
#' @import dplyr
#' @import stringr
#' @import phyloseq
#' @import ggplot2
#' @import shiny
#' @import plotly
#' @import utils
#' @import data.table
#' @import shinyjs
#' @import shinythemes
#' @import DT
#' @import V8
#' @import psadd
#' @import grid
#' @title TaxID to Species
#'
#' Transforms taxID to the corresponding Species name.
#'
#' @param phylo \link[phyloseq]{phyloseq} object
#' @param taxID
#'
#'
#' @return Species name
#' @export
taxids2names <-
function(phylo, TaxID, level = "Species")
phylo@tax_table[TaxID, level]  %>% as.character
#' Deal with NAs
#'
#' Replaces NAs with the following: {Class}_NA. Class stands for the last known class of the corresponding OTU.
#'
#' @param tax_table A table obtained by \link[phyloseq]{tax_table}.
#'
#'
#' @return Modified tax table
#' @export
clean_tax_table <- function(tax_table) {
tax_table <- as.data.frame(tax_table)
tax_table[] <- lapply(tax_table, as.character)
inds <- which(is.na(tax_table), arr.ind = TRUE)
if(length(inds)==0)
return(tax_table)
inds1 <- aggregate(row ~ col, data = inds, list)
# rownames(inds) <- inds$col
# inds <- inds$row
env <- environment()
tmp <- tax_table
levels <- apply(inds1, 1, function(x) {
tbl <- tax_table[x$row, 1:(x$col - 1)]
tbl <- as.data.frame(tbl)
levels <- apply(tbl, 1, function(y) {
y[max(which(!is.na(y)))]
})
levels
# assign("tmp", tax_table, env)
}) %>% unlist
tax_table[inds] <- paste0(levels, "_NA")
tax_table
}
#' Make Sankey links table
#'
#' Creates a table with information about all the links from \code{source} to \code{target}.
#'     This table can be used to create a shankey plot.
#'
#' @param tax_table filtered tax table from a \link[phyloseq]{phyloseq} object
#' @param otu_table otu_table from a \link[phyloseq]{phyloseq} object
#' @param source \code{c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species")}
#' @param target \code{c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species")}
#' @param source_filter String to filter \code{source} values.
#' @param level_filter \code{c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species")}
#'
#' @return A data.frame with info about the links.
#' @export
makeSankey_links <-
function(tax_table,
otu_table,
source,
target,
source_filter,
level_filter) {
group <- tax_table[, target]
target_means <- rowsum(otu_table, group) %>% rowMeans() %>%
{
. / sum(.) * 100
}
# Filter tax_table
if (!is.null(source_filter)) {
if (is.null(level_filter))
level_filter <- source
tax_table <-
filter(tax_table, tax_table[, level_filter] == source_filter)
}
links <-
tax_table[, c(source, target)] %>% data.frame(stringsAsFactors = FALSE) %>%
distinct %>% setNames(c("Source", "Target")) %>%
mutate(
Value = target_means[.$Target],
Source_level = rep(source, nrow(.)),
Target_level = rep(target, nrow(.))
) %>%
.[order(.$Value, decreasing = TRUE),] %>% .[which(.$Value > 0.5),] %>%
.[1:min(10, nrow(.)),]
links
}
library(plotly)
#' Sankey plot
#'
#' Plot a sankey diagram.
#'
#' @param phylo \link[phyloseq]{phyloseq} object
#' @param source \code{c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species")}
#' @param target \code{c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species")}
#' @param level_filter \code{c("Kingdom", "Phylum", "Class", "Order", "Family", "Genus", "Species")}
#' @param source_filter String to filter \code{source} values.
#' @param normalized A boolean value indicating, whether the count_table is normalized for sequencing depth.
#'
#' @return An intercative sankey plot generated by plotly.
#' @export
plot_sankey <-
function(phylo,
source = "Kingdom",
target = "Phylum",
level_filter = NULL,
source_filter = NULL,
normalized = FALSE) {
if (is.null(phylo))
return(NULL)
# Deal with NA values
tax_table <- clean_tax_table(phylo@tax_table)
firstLevel <- which(colnames(tax_table) == source)
lastLevel <- which(colnames(tax_table) == target)
levls <- colnames(tax_table)[firstLevel:lastLevel]
pairs <-
lapply(1:(length(levls) - 1), function(x)
list(Source = levls[x], Target = levls[x + 1]))
phylo@tax_table <- tax_table(tax_table)
otu_table <- phylo@otu_table
links <-
do.call(rbind, lapply(pairs, function(x)
makeSankey_links(
tax_table,
otu_table,
x$Source,
x$Target,
source_filter,
level_filter
)))
# Add __S and __T
links$Source <-
paste0(substr(links$Source_level, 1, 1), "__", links$Source)
links$Target <-
paste0(substr(links$Target_level, 1, 1), "__", links$Target)
sources <- links$Source %>% unique
targets <- links$Target %>% unique
node_labels <-
c(sources, targets) %>% setNames(0:(length(.) - 1), .)
links <- links %>%
mutate(SourceNr = node_labels[Source],
TargetNr = node_labels[Target])
p <- plot_ly(
source = "sankey",
type = "sankey",
valueformat = ".0f",
valuesuffix = "%",
node = list(
label = names(node_labels),
# color = json_data$data[[1]]$node$color,
pad = 15,
thickness = 15,
line = list(color = "black",
width = 0.5)
),
link = with(links, list(
source = SourceNr,
target = TargetNr,
value =  Value
))
)
return(list(plot = p, links = links))
}
p <- plot_sankey(metaphlan_PHY_rel_species, source="Kingdom", target="Species", level_filter="Kingdom")
htmlwidgets::saveWidget(p[[1]], file = "plot4_sankey_species.html")
write_csv(psmelt(resfinder_PHY_rel_HWW), file = 'resfinder_PHY_rel_HWW.csv')
write_csv(psmelt(resfinder_PHY_rel_HWW), file = 'resfinder_PHY_rel_HWW.csv')
write_csv(psmelt(MGE_PHY_rel_HWW), file = 'MGE_PHY_rel_HWW.csv')
write_csv(psmelt(MGE_PHY_rel_HWW), file = 'MGE_PHY_rel_HWW.csv')
write_csv(psmelt(metaphlan_PHY_rel_phylum), file = 'metaphlan_PHY_rel_phylum.csv')
write_csv(psmelt(metaphlan_PHY_rel_class), file = 'metaphlan_PHY_rel_class.csv')
write_csv(psmelt(metaphlan_PHY_rel_order), file = 'metaphlan_PHY_rel_order.csv')
write_csv(psmelt(metaphlan_PHY_rel_family), file = 'metaphlan_PHY_rel_family.csv')
write_csv(psmelt(metaphlan_PHY_rel_genus), file = 'metaphlan_PHY_rel_genus.csv')
write_csv(psmelt(metaphlan_PHY_rel_species), file = 'metaphlan_PHY_rel_species.csv')
sessionInfo()
arg_observed <- data.frame("observed" = apply(resfinder_PHY_rel_HWW@otu_table > 0, 2, sum))
all(rownames(arg_observed) == colnames(resfinder_PHY_rel_HWW@otu_table))
arg_observed$hospital <- as.factor(resfinder_PHY_rel_HWW@sam_data$hospital)
# Exploratory data analysis
arg_observed_eda <- arg_observed %>%
group_by(hospital) %>%
summarise(
mean = mean(observed),
sd = sd(observed),
n = n(),
se = sd / sqrt(n),
conf.low = mean - qt(0.975, df = n - 1) * se,
conf.high = mean + qt(0.975, df = n - 1) * se
)
# Test the significance
kruskal.test(observed ~ hospital, data = arg_observed)
# Test multiple pairwise
arg_observed_stat.test <- pairwise.wilcox.test(arg_observed$observed, arg_observed$hospital, p.adjust.method = "BH")
arg_observed_stat.test
arg_observed <- data.frame("observed" = apply(resfinder_PHY_rel_HWW@otu_table > 0, 2, sum))
all(rownames(arg_observed) == colnames(resfinder_PHY_rel_HWW@otu_table))
arg_observed$hospital <- as.factor(resfinder_PHY_rel_HWW@sam_data$hospital)
# Exploratory data analysis
arg_observed_eda <- arg_observed %>%
group_by(hospital) %>%
summarise(
mean = mean(observed),
sd = sd(observed),
n = n(),
se = sd / sqrt(n),
conf.low = mean - qt(0.975, df = n - 1) * se,
conf.high = mean + qt(0.975, df = n - 1) * se
)
# Test the significance
kruskal.test(observed ~ hospital, data = arg_observed)
# Test multiple pairwise
arg_observed_stat.test <- pairwise.wilcox.test(arg_observed$observed, arg_observed$hospital, p.adjust.method = "BH")
arg_observed_stat.test
# There are sig. differences
#      CGH    SLMC
# SLMC 0.0032 -
# UST  0.0032 0.6991
# Plot
p <- ggboxplot(arg_observed, x = "hospital", y = "observed", fill = "hospital", palette = c("#CD3857", "#61A6E3", "#CC7722")) +
geom_dotplot(binaxis='y', stackdir='center', dotsize = 0.4, aes(fill=hospital)) +
div_th +
labs(title = "Total Abundances for ARGs Across Hospitals",
subtitle = "Total Abundances by Hospital") +
scale_y_continuous(limits = c(4,max(arg_observed$observed)), breaks = seq(4,max(arg_observed$observed), by = 0.5)) +
geom_text(aes(label = paste(rownames(arg_observed), arg_observed$observed)), hjust = -0.1, vjust = 0.5, size = 4)
# Save plot
ggsave(filename = "plot14_arg_observed.tiff",
width = 16, height = 13, dpi = 300, units = "in", device='tiff', scale = 1)
arg_observed <- data.frame("observed" = apply(resfinder_PHY_rel_HWW@otu_table > 0, 2, sum))
all(rownames(arg_observed) == colnames(resfinder_PHY_rel_HWW@otu_table))
arg_observed$hospital <- as.factor(resfinder_PHY_rel_HWW@sam_data$hospital)
# Exploratory data analysis
arg_observed_eda <- arg_observed %>%
group_by(hospital) %>%
summarise(
mean = mean(observed),
sd = sd(observed),
n = n(),
se = sd / sqrt(n),
conf.low = mean - qt(0.975, df = n - 1) * se,
conf.high = mean + qt(0.975, df = n - 1) * se
)
# Test the significance
kruskal.test(observed ~ hospital, data = arg_observed)
# Test multiple pairwise
arg_observed_stat.test <- pairwise.wilcox.test(arg_observed$observed, arg_observed$hospital, p.adjust.method = "BH")
arg_observed_stat.test
# There are sig. differences
#      CGH    SLMC
# SLMC 0.0032 -
# UST  0.0032 0.6991
# Plot
p <- ggboxplot(arg_observed, x = "hospital", y = "observed", fill = "hospital", palette = c("#CD3857", "#61A6E3", "#CC7722")) +
geom_dotplot(binaxis='y', stackdir='center', dotsize = 0.4, aes(fill=hospital)) +
div_th +
labs(title = "Total Abundances for ARGs Across Hospitals",
subtitle = "Total Abundances by Hospital") +
scale_y_continuous(limits = c(350,max(arg_observed$observed)), breaks = seq(350,max(arg_observed$observed), by = 50)) +
geom_text(aes(label = paste(rownames(arg_observed), arg_observed$observed)), hjust = -0.1, vjust = 0.5, size = 4)
# Save plot
ggsave(filename = "plot14_arg_observed.tiff",
width = 16, height = 13, dpi = 300, units = "in", device='tiff', scale = 1)
mge_observed <- data.frame("observed" = apply(MGE_PHY_rel_HWW@otu_table > 0, 2, sum))
all(rownames(mge_observed) == colnames(MGE_PHY_rel_HWW@otu_table))
mge_observed$hospital <- as.factor(MGE_PHY_rel_HWW@sam_data$hospital)
# Exploratory data analysis
mge_observed_eda <- mge_observed %>%
group_by(hospital) %>%
summarise(
mean = mean(observed),
sd = sd(observed),
n = n(),
se = sd / sqrt(n),
conf.low = mean - qt(0.975, df = n - 1) * se,
conf.high = mean + qt(0.975, df = n - 1) * se
)
# Test the significance
kruskal.test(observed ~ hospital, data = mge_observed)
# Test multiple pairwise
mge_observed_stat.test <- pairwise.wilcox.test(mge_observed$observed, mge_observed$hospital, p.adjust.method = "BH")
mge_observed_stat.test
# There are sig. differences
#      CGH    SLMC
# SLMC 0.0032 -
# UST  0.0032 0.6991
# Plot
p <- ggboxplot(mge_observed, x = "hospital", y = "observed", fill = "hospital", palette = c("#CD3857", "#61A6E3", "#CC7722")) +
geom_dotplot(binaxis='y', stackdir='center', dotsize = 0.4, aes(fill=hospital)) +
div_th +
labs(title = "Total Abundances for MGEs Across Hospitals",
subtitle = "Total Abundances by Hospital") +
scale_y_continuous(limits = c(350,max(mge_observed$observed)), breaks = seq(350,max(mge_observed$observed), by = 50)) +
geom_text(aes(label = paste(rownames(mge_observed), mge_observed$observed)), hjust = -0.1, vjust = 0.5, size = 4)
# Save plot
ggsave(filename = "plot14_mge_observed.tiff",
width = 16, height = 13, dpi = 300, units = "in", device='tiff', scale = 1)
